name: Release

on:
  push:
    tags:
      - 'v*'          # e.g. v0.1.0
  workflow_dispatch:   # Allow manual release

permissions:
  contents: read

concurrency:
  group: release
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}  # npm publish will automatically read this env variable
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Install deps (CI)
        run: npm ci

      # Before publishing, run the same checks as CI: build + smoke + size-limit
      - name: Verify (build + smoke + size-limit)
        run: npm run pack:dry

      # Determine dist-tag from tag name
      - name: Resolve dist-tag (beta vs latest)
        id: dist
        shell: bash
        run: |
          REF="${GITHUB_REF_NAME#v}"
          if [[ "$REF" == *"-"* ]]; then
            # pre-release tag like 1.2.3-beta.0 or 1.2.3-rc.1
            if [[ "$REF" == *"-rc."* ]]; then
              echo "tag=rc" >> "$GITHUB_OUTPUT"
            else
              echo "tag=beta" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi
          echo "Resolved dist-tag: $(cat $GITHUB_OUTPUT || true)"

      - name: Ensure package.json version matches tag
        shell: bash
        run: |
          REF="${GITHUB_REF_NAME#v}"
          PKG_VERSION=$(node -p "require('./package.json').version")
          if [[ "$PKG_VERSION" != "$REF" ]]; then
            echo "::error ::package.json version ($PKG_VERSION) does not match git tag ($REF)."
            exit 1
          fi
          echo "Version OK: $PKG_VERSION"

      - name: Publish to npm
        run: npm publish --tag ${{ steps.dist.outputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
